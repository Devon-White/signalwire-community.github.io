"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[6661],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),o=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=o(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=o(n),d=l,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(g,p(p({ref:t},c),{},{components:n})):r.createElement(g,p({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,p=new Array(a);p[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,p[1]=i;for(var o=2;o<a;o++)p[o]=n[o];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9152:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});var r=n(7462),l=(n(7294),n(3905));const a={sidebar_label:"PromptResult"},p="Relay.Calling.PromptResult",i={unversionedId:"php/reference/relay_calling/prompt_result",id:"php/reference/relay_calling/prompt_result",title:"Relay.Calling.PromptResult",description:"This object returned from one of synchronous prompt methods that represents the final result of a prompting attempt.",source:"@site/docs/php/reference/relay_calling/prompt_result.mdx",sourceDirName:"php/reference/relay_calling",slug:"/php/reference/relay_calling/prompt_result",permalink:"/docs/php/reference/relay_calling/prompt_result",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_calling/prompt_result.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"PromptResult"},sidebar:"phpSidebar",previous:{title:"PromptAction",permalink:"/docs/php/reference/relay_calling/prompt_action"},next:{title:"PromptVolumeResult",permalink:"/docs/php/reference/relay_calling/prompt_volume_result"}},s={},o=[{value:"Methods",id:"methods",level:2},{value:"getConfidence",id:"getconfidence",level:3},{value:"getEvent",id:"getevent",level:3},{value:"getResult",id:"getresult",level:3},{value:"getTerminator",id:"getterminator",level:3},{value:"getType",id:"gettype",level:3},{value:"isSuccessful",id:"issuccessful",level:3}],c={toc:o};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"relaycallingpromptresult"},"Relay.Calling.PromptResult"),(0,l.kt)("p",null,"This object returned from one of ",(0,l.kt)("em",{parentName:"p"},"synchronous")," prompt methods that represents the final result of a prompting attempt."),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("div",{class:"method-definitions"}),(0,l.kt)("h3",{id:"getconfidence"},"getConfidence"),(0,l.kt)("p",null,"In a ",(0,l.kt)("inlineCode",{parentName:"p"},"prompt")," action of type ",(0,l.kt)("inlineCode",{parentName:"p"},"speech"),", it returns the confidence of the result."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")," - Confidence of the result on a ",(0,l.kt)("inlineCode",{parentName:"p"},"speech")," prompt."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start prompt and then check the result confidence."',title:'"Start',prompt:!0,and:!0,then:!0,check:!0,the:!0,result:!0,'confidence."':!0},"<?php\n\n$collect = [\n  'type' => 'speech',\n  'end_silence_timeout' => 1,\n  'speech_language' => 'en-US',\n  'text' => 'Please, tell me who you want to talk to'\n];\n$call->promptTTS($collect)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $confidence = $result->getConfidence(); // => 83.2\n  }\n});\n")),(0,l.kt)("h3",{id:"getevent"},"getEvent"),(0,l.kt)("p",null,"Returns the last Relay Event arrived for this operation."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_event"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Event"))," - Last Relay Event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the prompt while playing TTS and then inspect last Relay event payload."',title:'"Start',the:!0,prompt:!0,while:!0,playing:!0,TTS:!0,and:!0,then:!0,inspect:!0,last:!0,Relay:!0,event:!0,'payload."':!0},"<?php\n\n$collect = [\n  'type' => 'digits',\n  'digits_max' => 3,\n  'initial_timeout' => 10,\n  'text' => 'Please, enter your 3 digits PIN'\n];\n$call->promptTTS($collect)->done(function($result) {\n  $event = $result->getEvent();\n  // Inspect $event->payload ..\n});\n")),(0,l.kt)("h3",{id:"getresult"},"getResult"),(0,l.kt)("p",null,"Returns the user's input in a prompt attempt. Could be both from ",(0,l.kt)("inlineCode",{parentName:"p"},"speech")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"digits")," type."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - User's input in a prompt attempt."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Start recording and print the result in a 'digits' prompt.\"",title:'"Start',recording:!0,and:!0,print:!0,the:!0,result:!0,in:!0,a:!0,"'digits'":!0,'prompt."':!0},"<?php\n\n$collect = [\n  'type' => 'digits',\n  'digits_max' => 3,\n  'initial_timeout' => 10,\n  'text' => 'Please, enter your 3 digits PIN'\n];\n$call->promptTTS($collect)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $result = $result->getResult();\n\n    echo \"User enter the PIN: \" . $result;\n  }\n});\n")),(0,l.kt)("h3",{id:"getterminator"},"getTerminator"),(0,l.kt)("p",null,"In a ",(0,l.kt)("inlineCode",{parentName:"p"},"prompt")," action of type ",(0,l.kt)("inlineCode",{parentName:"p"},"digits"),", it returns the digit that has terminated the attempt."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - Digit that has terminated the prompt attempt."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start prompt and then check the terminator digit."',title:'"Start',prompt:!0,and:!0,then:!0,check:!0,the:!0,terminator:!0,'digit."':!0},'<?php\n\n$collect = [ "initial_timeout" => 10, "digits" => [ "max" => 3, "digit_timeout" => 5, "terminators" => "#*" ] ];\n$tts = [ "text" => "Please, enter your 3 digits PIN" ];\n$call->promptTTS($collect)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $terminator = $result->getTerminator(); // => "#"\n  }\n});\n')),(0,l.kt)("h3",{id:"gettype"},"getType"),(0,l.kt)("p",null,"Returns the type of the attempt: ",(0,l.kt)("inlineCode",{parentName:"p"},"digits")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"speech"),"."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - ",(0,l.kt)("em",{parentName:"p"},"digits")," or ",(0,l.kt)("em",{parentName:"p"},"speech"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start prompt and then check the type of the prompt."',title:'"Start',prompt:!0,and:!0,then:!0,check:!0,the:!0,type:!0,of:!0,'prompt."':!0},"<?php\n\n$collect = [\n  'type' => 'digits',\n  'digits_max' => 3,\n  'initial_timeout' => 10,\n  'text' => 'Please, enter your 3 digits PIN'\n];\n$call->promptTTS($collect)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $type = $result->getType(); // => \"digits\"\n  }\n});\n")),(0,l.kt)("h3",{id:"issuccessful"},"isSuccessful"),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the prompt attempt succeeded, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - True/False accordingly to the state."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the prompt while playing TTS and then check if it has ended successfully."',title:'"Start',the:!0,prompt:!0,while:!0,playing:!0,TTS:!0,and:!0,then:!0,check:!0,if:!0,it:!0,has:!0,ended:!0,'successfully."':!0},"<?php\n\n$collect = [\n  'type' => 'digits',\n  'digits_max' => 3,\n  'initial_timeout' => 10,\n  'text' => 'Please, enter your 3 digits PIN'\n];\n$call->promptTTS($collect)->done(function($result) {\n  if ($result->isSuccessful()) {\n    // Prompt completed with success..\n  }\n});\n")))}u.isMDXComponent=!0}}]);