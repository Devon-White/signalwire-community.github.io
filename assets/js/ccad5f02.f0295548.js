"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[8250],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=o(n),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||l;return n?a.createElement(m,p(p({ref:t},c),{},{components:n})):a.createElement(m,p({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,p=new Array(l);p[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var o=2;o<l;o++)p[o]=n[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3516:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_label:"TapResult"},p="Relay.Calling.TapResult",i={unversionedId:"php/reference/relay_calling/tap_result",id:"php/reference/relay_calling/tap_result",title:"Relay.Calling.TapResult",description:"This object returned from tap method that represents the final result of a tapping.",source:"@site/docs/php/reference/relay_calling/tap_result.mdx",sourceDirName:"php/reference/relay_calling",slug:"/php/reference/relay_calling/tap_result",permalink:"/docs/php/reference/relay_calling/tap_result",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_calling/tap_result.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"TapResult"},sidebar:"phpSidebar",previous:{title:"TapAction",permalink:"/docs/php/reference/relay_calling/tap_action"},next:{title:"Relay.Client",permalink:"/docs/php/reference/relay_client"}},s={},o=[{value:"Methods",id:"methods",level:2},{value:"getDestinationDevice",id:"getdestinationdevice",level:3},{value:"getEvent",id:"getevent",level:3},{value:"getSourceDevice",id:"getsourcedevice",level:3},{value:"getTap",id:"gettap",level:3},{value:"isSuccessful",id:"issuccessful",level:3}],c={toc:o};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"relaycallingtapresult"},"Relay.Calling.TapResult"),(0,r.kt)("p",null,"This object returned from ",(0,r.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/call#tap"},(0,r.kt)("inlineCode",{parentName:"a"},"tap"))," method that represents the final result of a tapping."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("div",{class:"method-definitions"}),(0,r.kt)("h3",{id:"getdestinationdevice"},"getDestinationDevice"),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"destination")," device receiving media."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.1+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"None")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - The destination device."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Tapping audio from the call and then inspect the destination device."',title:'"Tapping',audio:!0,from:!0,the:!0,call:!0,and:!0,then:!0,inspect:!0,destination:!0,'device."':!0},"<?php\n\n$tap = [\n  'target_type' => 'rtp',\n  'target_addr' => '192.168.1.1',\n  'target_port' => 1234\n];\n$call->tap($tap)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $destination = $result->getDestinationDevice();\n  }\n});\n")),(0,r.kt)("h3",{id:"getevent"},"getEvent"),(0,r.kt)("p",null,"Returns the last Relay Event arrived for this operation."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.1+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"None")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_event"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Event"))," - Last Relay Event."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Tapping audio from the call and grab the result when it\'s completed."',title:'"Tapping',audio:!0,from:!0,the:!0,call:!0,and:!0,grab:!0,result:!0,when:!0,"it's":!0,'completed."':!0},"<?php\n\n$tap = [\n  'target_type' => 'rtp',\n  'target_addr' => '192.168.1.1',\n  'target_port' => 1234\n];\n$call->tap($tap)->done(function($result) {\n  $event = $result->getEvent();\n  // Inspect $event->payload ..\n});\n")),(0,r.kt)("h3",{id:"getsourcedevice"},"getSourceDevice"),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," device sending media."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.1+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"None")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - The source device."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Tapping audio from the call and then inspect the source device."',title:'"Tapping',audio:!0,from:!0,the:!0,call:!0,and:!0,then:!0,inspect:!0,source:!0,'device."':!0},"<?php\n\n$tap = [\n  'target_type' => 'rtp',\n  'target_addr' => '192.168.1.1',\n  'target_port' => 1234\n];\n$call->tap($tap)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $source = $result->getSourceDevice();\n  }\n});\n")),(0,r.kt)("h3",{id:"gettap"},"getTap"),(0,r.kt)("p",null,"Returns the payload for this ",(0,r.kt)("inlineCode",{parentName:"p"},"tap")," action."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.1+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"None")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - Payload used to start tapping."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Tapping audio from the call and then inspect the 'tap' payload.\"",title:'"Tapping',audio:!0,from:!0,the:!0,call:!0,and:!0,then:!0,inspect:!0,"'tap'":!0,'payload."':!0},"<?php\n\n$tap = [\n  'target_type' => 'rtp',\n  'target_addr' => '192.168.1.1',\n  'target_port' => 1234\n];\n$call->tap($tap)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $tap = $result->getTap();\n  }\n});\n")),(0,r.kt)("h3",{id:"issuccessful"},"isSuccessful"),(0,r.kt)("p",null,"Return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the tapping succeeded, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.1+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"None")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," - True/False accordingly to the state."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Tapping audio from the call and then check if it has ended successfully."',title:'"Tapping',audio:!0,from:!0,the:!0,call:!0,and:!0,then:!0,check:!0,if:!0,it:!0,has:!0,ended:!0,'successfully."':!0},"<?php\n\n$tap = [\n  'target_type' => 'rtp',\n  'target_addr' => '192.168.1.1',\n  'target_port' => 1234\n];\n$call->tap($tap)->done(function($result) {\n  if ($result->isSuccessful()) {\n\n  }\n});\n")))}u.isMDXComponent=!0}}]);