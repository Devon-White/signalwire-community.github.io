"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[29],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(a),d=l,g=m["".concat(o,".").concat(d)]||m[d]||c[d]||r;return a?n.createElement(g,p(p({ref:t},u),{},{components:a})):n.createElement(g,p({ref:t},u))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,p=new Array(r);p[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,p[1]=i;for(var s=2;s<r;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4980:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_label:"PlayAction"},p="Relay.Calling.PlayAction",i={unversionedId:"php/reference/relay_calling/play_action",id:"php/reference/relay_calling/play_action",title:"Relay.Calling.PlayAction",description:"This object returned from one of asynchronous play methods that represents a playing currently active on a call.",source:"@site/docs/php/reference/relay_calling/play_action.mdx",sourceDirName:"php/reference/relay_calling",slug:"/php/reference/relay_calling/play_action",permalink:"/docs/php/reference/relay_calling/play_action",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_calling/play_action.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"PlayAction"},sidebar:"phpSidebar",previous:{title:"HangupResult",permalink:"/docs/php/reference/relay_calling/hangup_result"},next:{title:"PlayPauseResult",permalink:"/docs/php/reference/relay_calling/play_pause_result"}},o={},s=[{value:"Methods",id:"methods",level:2},{value:"getControlId",id:"getcontrolid",level:3},{value:"getPayload",id:"getpayload",level:3},{value:"getResult",id:"getresult",level:3},{value:"getState",id:"getstate",level:3},{value:"isCompleted",id:"iscompleted",level:3},{value:"pause",id:"pause",level:3},{value:"resume",id:"resume",level:3},{value:"stop",id:"stop",level:3},{value:"volume",id:"volume",level:3}],u={toc:s};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"relaycallingplayaction"},"Relay.Calling.PlayAction"),(0,l.kt)("p",null,"This object returned from one of ",(0,l.kt)("em",{parentName:"p"},"asynchronous")," play methods that represents a playing currently active on a call."),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("div",{class:"method-definitions"}),(0,l.kt)("h3",{id:"getcontrolid"},"getControlId"),(0,l.kt)("p",null,"Return the UUID to identify the playing."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - UUID to identify the action."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and print the controlId."',title:'"Start',the:!0,play:!0,and:!0,print:!0,'controlId."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  echo $action->getControlId();\n});\n")),(0,l.kt)("h3",{id:"getpayload"},"getPayload"),(0,l.kt)("p",null,"Return the payload sent to Relay to initiate the request. Useful to inspect what you sent to perform this action."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object")," - Payload sent to Relay."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and print out the payload."',title:'"Start',the:!0,play:!0,and:!0,print:!0,out:!0,'payload."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  print_r($action->getPayload());\n});\n")),(0,l.kt)("h3",{id:"getresult"},"getResult"),(0,l.kt)("p",null,"Returns the final result of the playing."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/play_result"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.PlayResult"))," - Final result of the playing."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and grab the result when it\'s completed."',title:'"Start',the:!0,play:!0,and:!0,grab:!0,result:!0,when:!0,"it's":!0,'completed."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  // .. later in the code since it's an async method\n  if ($action->isCompleted()) {\n    $result = $action->getResult();\n  }\n});\n")),(0,l.kt)("h3",{id:"getstate"},"getState"),(0,l.kt)("p",null,"Return the current state of the playing."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - Current state of the playing."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and print the state."',title:'"Start',the:!0,play:!0,and:!0,print:!0,'state."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  echo $action->getState();\n});\n")),(0,l.kt)("h3",{id:"iscompleted"},"isCompleted"),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the playing has finished, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," - True/False accordingly to the state."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and check if it has finished."',title:'"Start',the:!0,play:!0,and:!0,check:!0,if:!0,it:!0,has:!0,'finished."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  if ($action->isCompleted()) {\n\n  }\n});\n")),(0,l.kt)("h3",{id:"pause"},"pause"),(0,l.kt)("p",null,"Pause the playback immediately."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.3+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"React\\Promise\\Promise")," - Promise object that will be fulfilled with a ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/play_pause_result"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.PlayPauseResult"))," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start playing an audio file and pause it."',title:'"Start',playing:!0,an:!0,audio:!0,file:!0,and:!0,pause:!0,'it."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  // For demonstration purposes only..\n  $action->pause()->done(function($pauseResult) {\n    if ($pauseResult->successful) {\n\n    }\n  });\n});\n")),(0,l.kt)("h3",{id:"resume"},"resume"),(0,l.kt)("p",null,"Resume the playback immediately."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.3+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"React\\Promise\\Promise")," - Promise object that will be fulfilled with a ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/play_resume_result"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.PlayResumeResult"))," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start playing an audio file, stop it and then resume it."',title:'"Start',playing:!0,an:!0,audio:!0,"file,":!0,stop:!0,it:!0,and:!0,then:!0,resume:!0,'it."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  // For demonstration purposes only..\n  $action->pause()->done(function($pauseResult) use ($action) {\n    // .. later in the code..\n    $action->resume()->done(function($resumeResult) {\n\n    });\n  });\n});\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: you can avoid the ",(0,l.kt)("em",{parentName:"p"},"callback hell")," using these methods in a ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_consumer"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Consumer")),".")),(0,l.kt)("h3",{id:"stop"},"stop"),(0,l.kt)("p",null,"Stop the action immediately."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"React\\Promise\\Promise")," - Promise object that will be fulfilled with a ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/stop_result"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.StopResult"))," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Start the play and stop it if an 'Agent' is not available.\"",title:'"Start',the:!0,play:!0,and:!0,stop:!0,it:!0,if:!0,an:!0,"'Agent'":!0,is:!0,not:!0,'available."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) use ($globalAgent) {\n  if ($globalAgent->isAvailable() === false) {\n    $action->stop()->done(function($stopResult) {\n\n    });\n  }\n});\n")),(0,l.kt)("h3",{id:"volume"},"volume"),(0,l.kt)("p",null,"Control the volume of the playback."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.3+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"volume")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"method-prop-type"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"required-arg"},"required")),(0,l.kt)("td",{parentName:"tr",align:null},"Volume value between -40dB and +40dB where 0 is unchanged.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"React\\Promise\\Promise")," - Promise object that will be fulfilled with a ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/play_volume_result"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.PlayVolumeResult"))," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start the play and increase the playback volume."',title:'"Start',the:!0,play:!0,and:!0,increase:!0,playback:!0,'volume."':!0},"<?php\n\n$call->playAudioAsync('https://cdn.signalwire.com/default-music/welcome.mp3')->done(function($action) {\n  // For demonstration purposes only..\n  $action->volume(5.0)->done(function($volumeResult) {\n    if ($volumeResult->successful) {\n\n    }\n  });\n});\n")))}c.isMDXComponent=!0}}]);