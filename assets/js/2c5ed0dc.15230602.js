"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[6542],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),X=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=X(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=X(t),m=o,d=c["".concat(i,".").concat(m)]||c[m]||u[m]||a;return t?r.createElement(d,l(l({ref:n},p),{},{components:t})):r.createElement(d,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=c;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var X=2;X<a;X++)l[X]=t[X];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4362:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>X});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:8},l="Examples",s={unversionedId:"php/examples",id:"php/examples",title:"Examples",description:"Follow the examples to see how's easy to use the Relay SDK to interact with inbound or outbound calls.",source:"@site/docs/php/examples.mdx",sourceDirName:"php",slug:"/php/examples",permalink:"/docs/php/examples",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/examples.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"phpSidebar",previous:{title:"Relay.Task",permalink:"/docs/php/reference/relay_task"}},i={},X=[{value:"Inbound Calls",id:"inbound-calls",level:2},{value:"Outbound Calls",id:"outbound-calls",level:2}],p={toc:X};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Follow the examples to see how's easy to use the Relay SDK to interact with inbound or outbound calls."),(0,o.kt)("h2",{id:"inbound-calls"},"Inbound Calls"),(0,o.kt)("p",null,"Using RelayConsumer to manage inbound calls from both ",(0,o.kt)("inlineCode",{parentName:"p"},"home")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"office")," contexts. Answer the call, ask the user to enter his PIN and playback the digits he sent if successful."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nrequire dirname(__FILE__) . '/vendor/autoload.php';\n\nuse Generator as Coroutine;\n\nclass CustomConsumer extends SignalWire\\Relay\\Consumer {\n  public $project = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX';\n  public $token = 'PTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';\n  public $contexts = ['home', 'office'];\n\n  public function onIncomingCall($call): Coroutine {\n    $answerResult = yield $call->answer();\n    if (!$answerResult->isSuccessful()) {\n      echo \"Error answering the call..\";\n      return;\n    }\n    $promptParams = [\n      'type' => 'digits',\n      'initial_timeout' => 10\n      'digits_max' => 4,\n      'text' => 'Welcome to SignalWire! Please, enter your PIN'\n    ];\n    $promptResult = yield $call->promptTTS($promptParams);\n    if ($promptResult->isSuccessful()) {\n      $pin = $promptResult->getResult();\n      yield $call->playTTS([ \"text\" => \"You entered: {$pin}. Thanks and good bye!\" ]);\n    }\n    yield $call->hangup();\n  }\n}\n\n$consumer = new CustomConsumer();\n$consumer->run();\n")),(0,o.kt)("h2",{id:"outbound-calls"},"Outbound Calls"),(0,o.kt)("p",null,"Using RelayConsumer to make an outbound call and ask the user to enter his PIN. Once completed, print the collected digits."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nrequire dirname(__FILE__) . '/vendor/autoload.php';\n\nuse Generator as Coroutine;\n\nclass CustomConsumer extends SignalWire\\Relay\\Consumer {\n  public $project = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX';\n  public $token = 'PTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';\n  public $contexts = ['home', 'office'];\n\n  public function ready(): Coroutine {\n    $params = ['type' => 'phone', 'from' => '+1XXXXXXXXXX', 'to' => '+1YYYYYYYYYY'];\n    $dialResult = yield $this->client->calling->dial($params);\n    if (!$dialResult->isSuccessful()) {\n      echo \"Dial error or call not answered by the remote peer..\";\n      return;\n    }\n    $call = $dialResult->getCall();\n    $promptParams = [\n      'type' => 'digits',\n      'digits_max' => 4,\n      'digits_terminators' => '#',\n      'text' => 'Welcome at SignalWire. Please, enter your 4 digits PIN and then # to proceed'\n    ];\n    $promptResult = yield $call->promptTTS($promptParams);\n    if ($promptResult->isSuccessful()) {\n      $pin = $promptResult->getResult();\n      echo \"User digits: {$pin} ..\";\n    }\n  }\n}\n\n$consumer = new CustomConsumer();\n$consumer->run();\n")))}u.isMDXComponent=!0}}]);