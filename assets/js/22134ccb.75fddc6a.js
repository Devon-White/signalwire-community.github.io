"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[7521],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7047:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_label:"RecordAction"},o="Relay.Calling.RecordAction",i={unversionedId:"php/reference/relay_calling/record_action",id:"php/reference/relay_calling/record_action",title:"Relay.Calling.RecordAction",description:"This object returned from recordAsync method that represents a recording that is currently active on a call.",source:"@site/docs/php/reference/relay_calling/record_action.mdx",sourceDirName:"php/reference/relay_calling",slug:"/php/reference/relay_calling/record_action",permalink:"/docs/php/reference/relay_calling/record_action",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_calling/record_action.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"RecordAction"},sidebar:"phpSidebar",previous:{title:"PromptVolumeResult",permalink:"/docs/php/reference/relay_calling/prompt_volume_result"},next:{title:"RecordResult",permalink:"/docs/php/reference/relay_calling/record_result"}},p={},s=[{value:"Methods",id:"methods",level:2},{value:"getControlId",id:"getcontrolid",level:3},{value:"getResult",id:"getresult",level:3},{value:"getPayload",id:"getpayload",level:3},{value:"getState",id:"getstate",level:3},{value:"getUrl",id:"geturl",level:3},{value:"isCompleted",id:"iscompleted",level:3},{value:"stop",id:"stop",level:3}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"relaycallingrecordaction"},"Relay.Calling.RecordAction"),(0,a.kt)("p",null,"This object returned from ",(0,a.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/call#recordasync"},(0,a.kt)("inlineCode",{parentName:"a"},"recordAsync"))," method that represents a recording that is currently active on a call."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("div",{class:"method-definitions"}),(0,a.kt)("h3",{id:"getcontrolid"},"getControlId"),(0,a.kt)("p",null,"Return the UUID to identify the recording."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")," - UUID to identify the action."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording in stereo mode and print the controlId."',title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,print:!0,the:!0,'controlId."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  echo $action->getControlId();\n});\n")),(0,a.kt)("h3",{id:"getresult"},"getResult"),(0,a.kt)("p",null,"Returns the final result of the recording."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/record_result"},(0,a.kt)("inlineCode",{parentName:"a"},"Relay.Calling.RecordResult"))," - Final result of the recording."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording in stereo mode and grab the result when it\'s completed."',title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,grab:!0,the:!0,result:!0,when:!0,"it's":!0,'completed."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  // .. later in the code since it's an async method\n  if ($action->isCompleted()) {\n    $result = $action->getResult();\n  }\n});\n")),(0,a.kt)("h3",{id:"getpayload"},"getPayload"),(0,a.kt)("p",null,"Return the payload sent to Relay to initiate the request. Useful to inspect what you sent to perform this action."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Object")," - Payload sent to Relay."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording in stereo mode and print out the payload."',title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,print:!0,out:!0,the:!0,'payload."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  print_r($action->getPayload());\n});\n")),(0,a.kt)("h3",{id:"getstate"},"getState"),(0,a.kt)("p",null,"Return the current state of recording."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")," - Current state of recording."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording in stereo mode and print the state."',title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,print:!0,the:!0,'state."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  echo $action->getState();\n});\n")),(0,a.kt)("h3",{id:"geturl"},"getUrl"),(0,a.kt)("p",null,"Returns the HTTPS URL to the recording file."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": the recording may not be present at the URL until the recording is finished.")),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.3+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")," - HTTPS URL to the file."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording and print the URL."',title:'"Start',recording:!0,and:!0,print:!0,the:!0,'URL."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  echo $result->getUrl();\n});\n")),(0,a.kt)("h3",{id:"iscompleted"},"isCompleted"),(0,a.kt)("p",null,"Return ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," if the recording has finished, ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Boolean")," - True/False accordingly to the state."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Start recording in stereo mode and check if it has finished."',title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,check:!0,if:!0,it:!0,has:!0,'finished."':!0},"<?php\n\n$params = [\n  'stereo' => true\n];\n$call->recordAsync($params)->done(function($action) {\n  if ($action->isCompleted()) {\n\n  }\n});\n")),(0,a.kt)("h3",{id:"stop"},"stop"),(0,a.kt)("p",null,"Stop the action immediately."),(0,a.kt)("p",null,"Available In: ",(0,a.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"None")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"React\\Promise\\Promise")," - Promise object that will be fulfilled with a ",(0,a.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/stop_result"},(0,a.kt)("inlineCode",{parentName:"a"},"Relay.Calling.StopResult"))," object."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Start recording in stereo mode and stop it an 'Agent' is not available.\"",title:'"Start',recording:!0,in:!0,stereo:!0,mode:!0,and:!0,stop:!0,it:!0,an:!0,"'Agent'":!0,is:!0,not:!0,'available."':!0},'<?php\n\n$params = [\n  "audio" => [\n    "stereo" => true\n  ]\n];\n$call->recordAsync($params)->done(function($action) use ($globalAgent) {\n  if ($globalAgent->isAvailable() === false) {\n    $action->stop()->done(function($stopResult) {\n\n    });\n  }\n});\n')))}d.isMDXComponent=!0}}]);