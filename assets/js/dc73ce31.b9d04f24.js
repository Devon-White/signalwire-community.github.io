"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[1099],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),k=r,u=m["".concat(p,".").concat(k)]||m[k]||c[k]||l;return n?a.createElement(u,i(i({ref:t},d),{},{components:n})):a.createElement(u,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1805:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:5},i="Relay.Client",o={unversionedId:"php/reference/relay_client",id:"php/reference/relay_client",title:"Relay.Client",description:"Relay.Client is the basic connection to Relay, allowing you send commands to Relay and setup handlers for inbound events.",source:"@site/docs/php/reference/relay_client.mdx",sourceDirName:"php/reference",slug:"/php/reference/relay_client",permalink:"/docs/php/reference/relay_client",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_client.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"phpSidebar",previous:{title:"TapResult",permalink:"/docs/php/reference/relay_calling/tap_result"},next:{title:"Relay.Consumer",permalink:"/docs/php/reference/relay_consumer"}},p={},s=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"connect",id:"connect",level:3},{value:"disconnect",id:"disconnect",level:3},{value:"on",id:"on",level:3},{value:"off",id:"off",level:3},{value:"Events",id:"events",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"relayclient"},"Relay.Client"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Relay.Client")," is the basic connection to Relay, allowing you send commands to Relay and setup handlers for inbound events."),(0,r.kt)("h2",{id:"constructor"},"Constructor"),(0,r.kt)("p",null,"Constructs a client object to interact with Relay."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"project")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"required-arg"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Project ID from your SignalWire Space")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"token")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"required-arg"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Token from your SignalWire Space")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Create a Client to interact with the Relay API."',title:'"Create',a:!0,Client:!0,to:!0,interact:!0,with:!0,the:!0,Relay:!0,'API."':!0},"<?php\n\n$client = new SignalWire\\Relay\\Client([\n  'project' => 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX',\n  'token' => 'PTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n]);\n")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"calling")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},(0,r.kt)("a",{parentName:"td",href:"/docs/php/reference/relay_calling/"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Calling")))),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a ",(0,r.kt)("inlineCode",{parentName:"td"},"Relay.Calling")," instance associated with the client.")))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("div",{class:"method-definitions"}),(0,r.kt)("h3",{id:"connect"},"connect"),(0,r.kt)("p",null,"Activates the connection to the Relay API. The connection to Relay does not happen automatically so that you can setup handlers to events that might occur before the connection is successfully established."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\n$client->connect();\n")),(0,r.kt)("h3",{id:"disconnect"},"disconnect"),(0,r.kt)("p",null,"Disconnect the client from Relay."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\n$client->disconnect();\n")),(0,r.kt)("h3",{id:"on"},"on"),(0,r.kt)("p",null,"Attach an event handler for a specific type of event."),(0,r.kt)("p",null,"Available In: ",(0,r.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$event")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"required-arg"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Event name. Full list of events ",(0,r.kt)("a",{parentName:"td",href:"#events"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Client")," Events"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$callback")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"function")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"required-arg"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Callable to invoke when the event comes.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_client"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Client"))," - The client object itself."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Subscribe to the 'signalwire.ready' and 'signalwire.error' events.\"",title:'"Subscribe',to:!0,the:!0,"'signalwire.ready'":!0,and:!0,"'signalwire.error'":!0,'events."':!0},"<?php\n\n$client->on('signalwire.ready', function($client) {\n  // Your client is ready!\n})->on('signalwire.error', function(\\Exception $error) {\n  // Got an error...\n});\n")),(0,r.kt)("h3",{id:"off"},"off"),(0,r.kt)("p",null,"Remove an event handler that were attached with ",(0,r.kt)("inlineCode",{parentName:"p"},".on()"),". If no ",(0,r.kt)("inlineCode",{parentName:"p"},"handler")," parameter is passed, all listeners for that ",(0,r.kt)("inlineCode",{parentName:"p"},"event")," will be removed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$event")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"required-arg"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Event name. Full list of events ",(0,r.kt)("a",{parentName:"td",href:"#events"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Client")," Events"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$callback")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"method-prop-type"},"function")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"optional-arg"},"optional")),(0,r.kt)("td",{parentName:"tr",align:null},"Callable to remove. ",(0,r.kt)("br",null)," ",(0,r.kt)("em",{parentName:"td"},"Note: ",(0,r.kt)("inlineCode",{parentName:"em"},"$callback")," will be removed from the stack by reference so make sure to use the same reference in both ",(0,r.kt)("inlineCode",{parentName:"em"},".on()")," and ",(0,r.kt)("inlineCode",{parentName:"em"},".off()")," methods."))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_client"},(0,r.kt)("inlineCode",{parentName:"a"},"Relay.Client"))," - The client object itself."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=\"Subscribe to the 'signalwire.error' and then, remove the event handler.\"",title:'"Subscribe',to:!0,the:!0,"'signalwire.error'":!0,and:!0,"then,":!0,remove:!0,event:!0,'handler."':!0},"<?php\n\n$errorHandler = function($error) {\n  // Log the error..\n};\n\n$client->on('signalwire.error', $errorHandler);\n\n// .. later\n$client->off('signalwire.error', $errorHandler);\n")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"All available events you can attach a listener on."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.ready")),(0,r.kt)("td",{parentName:"tr",align:null},"The session has been established and all other methods can now be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.error")),(0,r.kt)("td",{parentName:"tr",align:null},"There is an error dispatch at the session level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.socket.open")),(0,r.kt)("td",{parentName:"tr",align:null},"The websocket is open. However, you have not yet been authenticated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.socket.error")),(0,r.kt)("td",{parentName:"tr",align:null},"The websocket gave an error.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.socket.message")),(0,r.kt)("td",{parentName:"tr",align:null},"The client has received a message from the websocket.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("inlineCode",{parentName:"td"},"signalwire.socket.close")),(0,r.kt)("td",{parentName:"tr",align:null},"The websocket is closing.")))))}c.isMDXComponent=!0}}]);