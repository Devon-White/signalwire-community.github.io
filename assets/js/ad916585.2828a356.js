"use strict";(self.webpackChunksignalwire_community_docs=self.webpackChunksignalwire_community_docs||[]).push([[8464],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=l,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7789:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),l=(n(7294),n(3905));const a={sidebar_label:"ConnectResult"},o="Relay.Calling.ConnectResult",c={unversionedId:"php/reference/relay_calling/connect_result",id:"php/reference/relay_calling/connect_result",title:"Relay.Calling.ConnectResult",description:"This object returned from the connect method that represents the final result of a connection between your call and a remote one.",source:"@site/docs/php/reference/relay_calling/connect_result.mdx",sourceDirName:"php/reference/relay_calling",slug:"/php/reference/relay_calling/connect_result",permalink:"/docs/php/reference/relay_calling/connect_result",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php/reference/relay_calling/connect_result.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"ConnectResult"},sidebar:"phpSidebar",previous:{title:"ConnectAction",permalink:"/docs/php/reference/relay_calling/connect_action"},next:{title:"DetectAction",permalink:"/docs/php/reference/relay_calling/detect_action"}},i={},s=[{value:"Methods",id:"methods",level:2},{value:"getCall",id:"getcall",level:3},{value:"getEvent",id:"getevent",level:3},{value:"isSuccessful",id:"issuccessful",level:3}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"relaycallingconnectresult"},"Relay.Calling.ConnectResult"),(0,l.kt)("p",null,"This object returned from the ",(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/call#connect"},(0,l.kt)("inlineCode",{parentName:"a"},"connect"))," method that represents the final result of a connection between your call and a remote one."),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("div",{class:"method-definitions"}),(0,l.kt)("h3",{id:"getcall"},"getCall"),(0,l.kt)("p",null,"Return the Call object connected with yours, if the connection succeeded."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_calling/call"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Calling.Call"))," - The remote Call."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Trying to connect two devices and then use the remote Call."',title:'"Trying',to:!0,connect:!0,two:!0,devices:!0,and:!0,then:!0,use:!0,the:!0,remote:!0,'Call."':!0},'<?php\n\n$devices = [\n  [ "type" => "phone", "to" => "+18991114444", "timeout" => 30 ],\n  [ "type" => "phone", "to" => "+18991114445", "timeout" => 20 ]\n];\n$call->connect(...$devices)->done(function($result) {\n  if ($result->isSuccessful()) {\n    $remoteCall = $result->getCall();\n    // Use $remoteCall as a normal Relay.Calling.Call object...\n  }\n});\n')),(0,l.kt)("h3",{id:"getevent"},"getEvent"),(0,l.kt)("p",null,"Returns the last Relay Event arrived for this operation."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/php/reference/relay_event"},(0,l.kt)("inlineCode",{parentName:"a"},"Relay.Event"))," - Last Relay Event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Trying to connect two devices and then grab the Relay event to inspect the payload."',title:'"Trying',to:!0,connect:!0,two:!0,devices:!0,and:!0,then:!0,grab:!0,the:!0,Relay:!0,event:!0,inspect:!0,'payload."':!0},'<?php\n\n$devices = [\n  [ "type" => "phone", "to" => "+18991114444", "timeout" => 30 ],\n  [ "type" => "phone", "to" => "+18991114445", "timeout" => 20 ]\n];\n$call->connect(...$devices)->done(function($result) {\n  $event = $result->getEvent();\n  // Inspect $event->payload ..\n});\n')),(0,l.kt)("h3",{id:"issuccessful"},"isSuccessful"),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the call has connected with a remote party, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("p",null,"Available In: ",(0,l.kt)("img",{class:"method-available-tag",src:"https://img.shields.io/badge/-v2.0+-brightgreen.svg"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - Whether the call has been connected successfully."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Trying to connect two devices and then check if your call has been connected."',title:'"Trying',to:!0,connect:!0,two:!0,devices:!0,and:!0,then:!0,check:!0,if:!0,your:!0,call:!0,has:!0,been:!0,'connected."':!0},'<?php\n\n$devices = [\n  [ "type" => "phone", "to" => "+18991114444", "timeout" => 30 ],\n  [ "type" => "phone", "to" => "+18991114445", "timeout" => 20 ]\n];\n$call->connect(...$devices)->done(function($result) {\n  if ($result->isSuccessful()) {\n    // Your call has been connected..\n  }\n});\n')))}u.isMDXComponent=!0}}]);